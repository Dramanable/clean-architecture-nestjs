# üöÄ Docker Compose Simple - Mode D√©veloppement
# Configuration simplifi√©e pour d√©veloppement rapide



services:
  # üóÑÔ∏è PostgreSQL - Base de donn√©es principale
  postgres:
    image: postgres:15-alpine
    container_name: cleanarchi_postgres_dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: cleanarchi_dev
      POSTGRES_USER: dev_user
      POSTGRES_PASSWORD: dev_password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev_user -d cleanarchi_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # üéØ Application NestJS - Clean Architecture (Development)
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: cleanarchi_app_dev
    restart: unless-stopped
    ports:
      - "3000:3000"    # Port principal
      - "9229:9229"    # Port de debug Node.js
    environment:
      # üåç Environment
      NODE_ENV: development
      PORT: 3000
      
      # üóÑÔ∏è Database
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: dev_user
      DATABASE_PASSWORD: dev_password123
      DATABASE_NAME: cleanarchi_dev
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: dev_user
      DB_PASSWORD: dev_password123
      DB_DATABASE: cleanarchi_dev
      
      # üîê JWT Secrets (DEV ONLY)
      ACCESS_TOKEN_SECRET: dev-access-token-secret-for-development-only-32chars
      REFRESH_TOKEN_SECRET: dev-refresh-token-secret-for-development-only-32chars
      ACCESS_TOKEN_EXPIRATION: 3600
      REFRESH_TOKEN_EXPIRATION_DAYS: 30
      
      # üîí Security (mode d√©veloppement - plus rapide)
      BCRYPT_ROUNDS: 4
      
      # üìù Logging
      LOG_LEVEL: debug
      DEBUG: "*"
      
    volumes:
      # üîÑ Hot reload - mount du code source
      - .:/app
      - /app/node_modules
      - /app/dist  # Volume anonyme pour √©viter les conflits de permissions
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    # üöÄ Utiliser npm run start:dev pour TypeScript et hot reload
    command: ["npm", "run", "start:dev"]
    stdin_open: true
    tty: true

  # üõ†Ô∏è pgAdmin - Interface d'administration PostgreSQL
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: cleanarchi_pgadmin_dev
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: dev@cleanarchi.com
      PGADMIN_DEFAULT_PASSWORD: dev123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_dev_data:/var/lib/pgadmin
    depends_on:
      - postgres

volumes:
  postgres_dev_data:
    driver: local
  pgadmin_dev_data:
    driver: local

networks:
  default:
    driver: bridge