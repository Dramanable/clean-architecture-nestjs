import { ConfigService } from '@nestjs/config';
import { IConfigService } from '../../application/ports/config.port';
export declare class AppConfigService implements IConfigService {
    private readonly configService;
    constructor(configService: ConfigService);
    getAccessTokenExpirationTime(): number;
    getRefreshTokenExpirationDays(): number;
    getAccessTokenSecret(): string;
    getRefreshTokenSecret(): string;
    getJwtIssuer(): string;
    getJwtAudience(): string;
    getAccessTokenAlgorithm(): string;
    getRefreshTokenAlgorithm(): string;
    getPasswordHashAlgorithm(): string;
    getBcryptRounds(): number;
    getEnvironment(): 'development' | 'test' | 'production';
    getDatabaseType(): 'postgresql' | 'mongodb' | 'mysql' | 'sqlite';
    getDatabaseHost(): string;
    getDatabasePort(): number;
    getDatabaseUsername(): string;
    getDatabasePassword(): string;
    getDatabaseName(): string;
    getDatabasePoolSize(): number;
    getRedisHost(): string;
    getRedisPort(): number;
    getRedisPassword(): string;
    getPort(): number;
    getHost(): string;
    getMongoConnectionString(): string;
    getLogLevel(): string;
    isProductionLogging(): boolean;
    getCorsOrigins(): string[];
    getCorsCredentials(): boolean;
    getHelmetConfig(): any;
    getCompressionConfig(): any;
    getRateLimitConfig(): any;
    getBodyParserConfig(): any;
    isProduction(): boolean;
    isDevelopment(): boolean;
    isTest(): boolean;
    getRateLimitMax(): number;
    getRateLimitWindowMs(): number;
    isSwaggerEnabled(): boolean;
    getSwaggerPath(): string;
    isFeatureEnabled(featureName: string): boolean;
    getEmailHost(): string;
    getEmailPort(): number;
    getEmailUser(): string;
    getEmailPassword(): string;
    getHealthCheckTimeout(): number;
    getHealthCheckInterval(): number;
}
